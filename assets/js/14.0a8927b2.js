(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{469:function(s,t,a){"use strict";a.r(t);var r=a(34),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"elaticsearch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elaticsearch"}},[s._v("#")]),s._v(" Elaticsearch")]),s._v(" "),a("p",[s._v("Elaticsearch，ES 是一个开源的高扩展的分布式、RESTful 风格的全文搜索与分析引擎。")]),s._v(" "),a("h2",{attrs:{id:"全文搜索引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全文搜索引擎"}},[s._v("#")]),s._v(" 全文搜索引擎")]),s._v(" "),a("p",[s._v("全文搜索引擎是目前广泛应用的主流搜索引擎，工作原理是计算机索引程序通过扫描文章中的每一个词，对每一个词建立一个索引，指明该词在文章中出现的次数和位置，当用户查询时，检索程序就根据事先建立的索引进行查找，并将查找的结果反馈给用户的检索方式。这个过程类似于通过字典中的检索字表查字的过程。")]),s._v(" "),a("p",[s._v("Apache Lucene 提供了全文搜索功能类库的核心工具包，能够做全文索引和搜寻，是最受欢迎 Java 信息检索程序库。")]),s._v(" "),a("p",[s._v("主流搜索引擎：Elasticsearch 和 Solr，都是基于 Lucene 搭建且可独立部署，由于内核相同，两者对于数据的操作 修改、添加、保存、查询等等都十分类似。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/kr/bigdata/other/Elasticsearch-Solr.jpg",alt:"Elasticsearch-Solr"}})]),s._v(" "),a("h2",{attrs:{id:"es-单点部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es-单点部署"}},[s._v("#")]),s._v(" ES 单点部署")]),s._v(" "),a("p",[s._v("在 window 下载并解压 Elaticsearch 后，运行 bin/elasticsearch.bat 启动 ES 服务")]),s._v(" "),a("p",[s._v("注：9300 端口是 ES 集群间组件通信端口，9200 端口为 http 协议 RESTful 端口；访问 localhost:9200")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"LAPTOP-6NUV36V7"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cluster_name"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"elasticsearch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cluster_uuid"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D1Pbm-m3RvCv0EOQ6LSHrA"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"number"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"7.8.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build_flavor"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"default"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build_type"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zip"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build_hash"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"757314695644ea9a1dc2fecd26d1a43856725e65"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build_date"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2020-06-14T19:35:50.234439Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build_snapshot"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lucene_version"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8.5.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"minimum_wire_compatibility_version"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6.8.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"minimum_index_compatibility_version"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6.0.0-beta1"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tagline"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You Know, for Search"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"数据格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据格式"}},[s._v("#")]),s._v(" 数据格式")]),s._v(" "),a("p",[s._v("ES 是面向文档型数据库，一条数据就是一个文档。与 MySQL 类比：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/kr/bigdata/other/%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F.jpg",alt:"数据格式"}})]),s._v(" "),a("p",[s._v("注：Elasticsearch 6.X 中，一个 index 下已经只能包含一个 type，Elasticsearch 7.X 中, Type 概念已经被删除了。")]),s._v(" "),a("h2",{attrs:{id:"核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[s._v("#")]),s._v(" 核心概念")]),s._v(" "),a("ul",[a("li",[s._v("索引：一个索引就是一个拥有几分相似特征的文档集合，索引设计都是为了提高搜索的性能")]),s._v(" "),a("li",[s._v("类型：在一个索引中，可以定义一种或多种类型。一个类型是索引的一个逻辑上的分类/分区。通常，会为具有一组共同字段的文档定义一个类型。不同的版本，类型发生了不同的变化：\n"),a("ul",[a("li",[s._v("5.x：支持多种类型")]),s._v(" "),a("li",[s._v("6.x：只能有一种类型")]),s._v(" "),a("li",[s._v("7.x：默认不再支持自定义索引类型（默认类型：_doc）")])])]),s._v(" "),a("li",[s._v("文档：一个文档是一个可被索引的基础信息单元，也就是一条数据，文档以 JSON 格式表示，在一个 index/type 里面，可以存储任意多的文档")]),s._v(" "),a("li",[s._v("字段：对文档数据根据不同属性进行的分类标识")]),s._v(" "),a("li",[s._v("映射：处理数据的方式和规则方面做一些限制，如：某个字段的数据类型、默认值、分析器、是否被索引等等")]),s._v(" "),a("li",[s._v("分片：一个索引可以存储超出单个节点硬件限制的大量数据，即索引分片存储")]),s._v(" "),a("li",[s._v("副本：分片的副本机制")]),s._v(" "),a("li",[s._v("分配：将分片分配给某个节点的过程，包括分配主分片或副分片。若是副本分片，还包含从主分片复制数据的过程。该过程是由 master 节点完成")])]),s._v(" "),a("h2",{attrs:{id:"系统架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统架构"}},[s._v("#")]),s._v(" 系统架构")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/kr/bigdata/other/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84.jpg",alt:"系统架构"}})]),s._v(" "),a("h2",{attrs:{id:"路由计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由计算"}},[s._v("#")]),s._v(" 路由计算")]),s._v(" "),a("p",[s._v("文档的索引路由：shard = hash(routing) % number_of_primary_shards；")]),s._v(" "),a("p",[s._v("routing 为可变值的路由参数，默认文档 ID，number_of_primary_shards 为主分片数量。")]),s._v(" "),a("p",[s._v("取余后得到的余数分布于 [0, number_of_primary_shards - 1] 之间，即是文档所在的分片位置。")]),s._v(" "),a("h2",{attrs:{id:"读写流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读写流程"}},[s._v("#")]),s._v(" 读写流程")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/kr/bigdata/other/%E5%86%99%E6%B5%81%E7%A8%8B(2%E5%88%86%E7%89%872%E5%89%AF%E6%9C%AC).jpg",alt:"写流程"}})]),s._v(" "),a("ul",[a("li",[s._v("客户端向 Master 节点发送新建、删除、索引文档请求")]),s._v(" "),a("li",[s._v("根据路由确定文档所属分片，若是主分片，直接处理请求，若是副分片，将请求转发到对应主分片所在的节点上")]),s._v(" "),a("li",[s._v("主分片处理请求，处理成功后，将请求并行转发到副分片所在节点，所有副分片处理成功后，Master 向客户端报告成功")])]),s._v(" "),a("p",[s._v("读流程：从主分片或副分片检索文档，Master 节点会通过轮询所有副本分片来达到负载均衡。")]),s._v(" "),a("p",[s._v("更新流程：主分片索引文档并完成更新，再将新版本完整文档异步转发到副分片完成更新。")]),s._v(" "),a("h2",{attrs:{id:"分片原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分片原理"}},[s._v("#")]),s._v(" 分片原理")]),s._v(" "),a("p",[s._v("ES 使用倒排索引的数据结构（支持一个字段索引多个值），适用于快速全文搜索。")]),s._v(" "),a("ul",[a("li",[s._v("正向排序：将搜索文件 ID 与搜索关键字进行对应，形成 KV 对")]),s._v(" "),a("li",[s._v("倒排排序：将正向排序的 KV 对互换，建立关键字到文件的映射")])])])}),[],!1,null,null,null);t.default=e.exports}}]);