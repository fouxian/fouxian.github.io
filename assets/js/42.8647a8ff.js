(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{497:function(t,s,a){"use strict";a.r(s);var n=a(34),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"常见容错机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见容错机制"}},[t._v("#")]),t._v(" 常见容错机制")]),t._v(" "),a("p",[t._v("系统设计中，常见容错机制："),a("code",[t._v("fail-fast")]),t._v("、"),a("code",[t._v("fail-safe")]),t._v("、"),a("code",[t._v("fail-over")]),t._v("、"),a("code",[t._v("fail-back")]),t._v("、"),a("code",[t._v("fail-silent")])]),t._v(" "),a("h2",{attrs:{id:"fail-fast-快速故障"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fail-fast-快速故障"}},[t._v("#")]),t._v(" fail-fast 快速故障")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("fail-fast")]),t._v("：快速故障是一种可以立即报告任何可能存在故障的情况，通常旨在停止正常操作，而不是继续尝试可能有问题的过程。此类设计通常会在操作中的多个点进行故障检查，因此可以及早发现故障并做出相应的处理。")])]),t._v(" "),a("h3",{attrs:{id:"java-集合快速故障迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-集合快速故障迭代器"}},[t._v("#")]),t._v(" Java 集合快速故障迭代器")]),t._v(" "),a("p",[t._v("快速故障迭代器：如果在迭代集合时对其进行了结构性（添加、删除、更新）修改，则快速故障迭代器会立即引发  ConcurrentModificationException 异常，但如果集合是由迭代器自己的方法如 remove() 修改的，则它们不会引发任何异常")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// AbstractList 迭代器 iterator.next() 方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Itr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" cursor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" lastRet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" expectedModCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" modCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkForComodification")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取迭代下一个元素时，先进行故障检测")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cursor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),t._v(" next "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tlastRet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tcursor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IndexOutOfBoundsException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkForComodification")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NoSuchElementException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkForComodification")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// modCount：集合使用的内部标志，标志集合修改次数")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 集合修改次数不一致，表明该集合结构被修改，获取下一个元素时，可能会发生索引溢出")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" expectedModCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConcurrentModificationException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("h2",{attrs:{id:"fail-safe-故障安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fail-safe-故障安全"}},[t._v("#")]),t._v(" fail-safe 故障安全")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("fail-safe")]),t._v("：如果出现特定类型的故障（不会造成伤害或影响非常小的故障），则可以忽略，因为此类故障不会造成损失或损失在可接受范围内。故障安全机制可以保证在故障前和故障后保持一样的安全状态。")])]),t._v(" "),a("h3",{attrs:{id:"java-集合故障安全迭代器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-集合故障安全迭代器"}},[t._v("#")]),t._v(" Java 集合故障安全迭代器")]),t._v(" "),a("p",[t._v("故障安全迭代器：如果在迭代集合时对其进行了结构性修改，则不会引发任何异常。因为，迭代器是对集合的克隆副本进行迭代操作，而不对实际的集合进行操作。")]),t._v(" "),a("p",[t._v("缺点：创建迭代器后对集合的任何修改都不会在迭代器中更新，且集合的克隆副本在内存上开销大")]),t._v(" "),a("h2",{attrs:{id:"fail-over-故障转移"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fail-over-故障转移"}},[t._v("#")]),t._v(" fail-over 故障转移")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("fail-over")]),t._v("：故障转移是系统出现故障或异常终止时切换到冗余或备用的系统。故障转移通常是系统自动进行的并且往往在没有告警的情况下运行，不需要人工干预。")])]),t._v(" "),a("h2",{attrs:{id:"fail-back-故障恢复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fail-back-故障恢复"}},[t._v("#")]),t._v(" fail-back 故障恢复")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("fail-back")]),t._v("：故障恢复是指将之前处于故障状态的系统恢复到原始工作状态，主系统可用后，自动从备用系统恢复到主系统。")])]),t._v(" "),a("h2",{attrs:{id:"fail-silent-故障沉默"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fail-silent-故障沉默"}},[t._v("#")]),t._v(" fail-silent 故障沉默")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("fail-silent")]),t._v("：调用服务失败后，就默认该服务一定时间内无法再对外提供服务，不再向它分配请求流量，将错误隔离开来，避免对其他服务产生影响。")])]),t._v(" "),a("p",[t._v("经常超时的服务可以使用 faile-silent 容错机制，防止请求堆积而消耗大量的线程、内存、网络等资源，进而影响到整个系统的稳定")])])}),[],!1,null,null,null);s.default=e.exports}}]);