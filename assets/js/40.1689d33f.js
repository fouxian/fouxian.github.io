(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{496:function(s,a,t){"use strict";t.r(a);var r=t(34),e=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"架构、存储引擎、事务、索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#架构、存储引擎、事务、索引"}},[s._v("#")]),s._v(" 架构、存储引擎、事务、索引")]),s._v(" "),t("h2",{attrs:{id:"mysql-架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql-架构"}},[s._v("#")]),s._v(" MySQL 架构")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/MySQL-%E4%BD%93%E7%B3%BB%E6%9E%B6%E6%9E%84.png",alt:"MySQL-体系架构"}})]),s._v(" "),t("ul",[t("li",[s._v("连接层：主要通过连接器建立客户端连接，授权认证等")]),s._v(" "),t("li",[s._v("服务层\n"),t("ul",[t("li",[s._v("缓存（MySQL 8.0 版本后移除）：缓存查询的数据")]),s._v(" "),t("li",[s._v("分析器：词法分析/语法分析")]),s._v(" "),t("li",[s._v("优化器：生成执行计划，逻辑优化处理")]),s._v(" "),t("li",[s._v("执行器：通过存储引擎处理数据")])])]),s._v(" "),t("li",[s._v("存储引擎：负责数据的存储和提取，服务器通过 API 与存储引擎进行通信")])]),s._v(" "),t("h2",{attrs:{id:"sql-执行过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-执行过程"}},[s._v("#")]),s._v(" SQL 执行过程")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/MySQL-SQL-%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B.webp",alt:"MySQL-SQL-执行过程"}})]),s._v(" "),t("p",[s._v("注：在更新表的时候会清空缓存")]),s._v(" "),t("h2",{attrs:{id:"myisam-innodb-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#myisam-innodb-区别"}},[s._v("#")]),s._v(" MyISAM/InnoDB 区别")]),s._v(" "),t("ol",[t("li",[s._v("MyISAM 不支持事务，InnoDB 支持事务")]),s._v(" "),t("li",[s._v("MyISAM 不支持外键，InnoDB 支持外键")])]),s._v(" "),t("blockquote",[t("p",[s._v("一般不建议在数据库层面使用外键，应用层面可以解决，但对数据的一致性造成影响")])]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("MyISAM 只有表级锁，不适用于高并发，InnoDB 支持行级锁和表级锁，默认行级锁，适用于高并发")]),s._v(" "),t("li",[s._v("MyISAM 只缓存索引，不缓存数据，InnoDB 缓存索引和数据")]),s._v(" "),t("li",[s._v("MyISAM 是非聚集索引，InnoDB 是聚集索引")]),s._v(" "),t("li",[s._v("MyISAM 用一个变量保存了表的行数，InnoDB 不保存表的函数，"),t("code",[s._v("count(*)")]),s._v("会全表扫描")]),s._v(" "),t("li",[s._v("MyISAM 不支持数据库崩溃后的安全恢复，而 InnoDB 支持")])]),s._v(" "),t("h2",{attrs:{id:"myisam"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#myisam"}},[s._v("#")]),s._v(" MyISAM")]),s._v(" "),t("p",[s._v("每个 MyISAM 表存储在磁盘中三个文件（表名命名）：")]),s._v(" "),t("ul",[t("li",[s._v(".frm：文件存储表的格式")]),s._v(" "),t("li",[s._v(".myd：文件存储表的数据")]),s._v(" "),t("li",[s._v(".myi：文件存储表的索引")])]),s._v(" "),t("h2",{attrs:{id:"innodb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#innodb"}},[s._v("#")]),s._v(" InnoDB")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" show engines"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Engine             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Support "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Comment                                                        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Transactions "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" XA   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Savepoints "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" MEMORY             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Hash based, stored "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" memory, useful "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" temporary tables      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" MRG_MYISAM         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Collection of identical MyISAM tables                          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" CSV                "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" CSV storage engine                                             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" FEDERATED          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Federated MySQL storage engine                                 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NULL       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" PERFORMANCE_SCHEMA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Performance Schema                                             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" MyISAM             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" MyISAM storage engine                                          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" InnoDB             "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" DEFAULT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Supports transactions, row-level locking, and foreign keys     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" BLACKHOLE          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" /dev/null storage engine "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("anything you "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" to it disappears"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" ARCHIVE            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" YES     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Archive storage engine                                         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NO         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+\nmysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" show variables like "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%storage_engine%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n+---------------------------------+-----------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Variable_name                   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Value     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+---------------------------------+-----------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" default_storage_engine          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" InnoDB    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" default_tmp_storage_engine      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" InnoDB    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" disabled_storage_engines        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" internal_tmp_mem_storage_engine "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" TempTable "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+---------------------------------+-----------+\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看某库某表的状态信息")]),s._v("\nmysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" show table status from dmc_dw where name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user_info'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("G"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n*************************** "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". row ***************************\n           Name: user_info\n         Engine: InnoDB\n        Version: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n     Row_format: Dynamic\n           Rows: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("800")]),s._v("\n Avg_row_length: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("143")]),s._v("\n    Data_length: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("114688")]),s._v("\nMax_data_length: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n   Index_length: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n      Data_free: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n Auto_increment: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("801")]),s._v("\n    Create_time: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("-09-26 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":35:44\n    Update_time: NULL\n     Check_time: NULL\n      Collation: utf8_general_ci\n       Checksum: NULL\n Create_options: "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("row_format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("DYNAMIC\n        Comment:\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br")])]),t("p",[s._v("MySQL 5.5 之前，MyISAM 引擎是 MySQL 的默认存储引擎")]),s._v(" "),t("p",[s._v("MySQL 5.5 之后，InnoDB 引擎是 MySQL 的默认存储引擎")]),s._v(" "),t("h3",{attrs:{id:"体系架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#体系架构"}},[s._v("#")]),s._v(" 体系架构")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/InnoDB-%E4%BD%93%E7%B3%BB%E6%9E%B6%E6%9E%84.png",alt:"InnoDB 体系架构"}}),s._v(" "),t("img",{attrs:{src:"/images/kr/database/mysql/InnoDB.webp",alt:"InnoDB 体系架构"}})]),s._v(" "),t("h3",{attrs:{id:"逻辑存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑存储"}},[s._v("#")]),s._v(" 逻辑存储")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/InnoDB-%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8.png",alt:"InnoDB 逻辑存储"}}),s._v("\n表数据和索引存储于表空间中，表空间是存储引擎中最高的存储逻辑单位，在表空间中又包括段、区、页、行。表的存储文件：")]),s._v(" "),t("ul",[t("li",[s._v(".frm：存储表的结构定义，所有的存储引擎都使用该文件存储表的结构定义")]),s._v(" "),t("li",[s._v(".idb：存储表的数据索引\n"),t("ul",[t("li",[s._v("共享表空间：系统表空间，存储了系统信息和所有库表和索引")]),s._v(" "),t("li",[s._v("独占表空间：表的独占表空间，存储了当前表的数据和索引")])])])]),s._v(" "),t("h2",{attrs:{id:"事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[s._v("#")]),s._v(" 事务")]),s._v(" "),t("blockquote",[t("p",[s._v("MySQL 事务也是在存储引擎层面实现的，InnoDB 支持事务，而 MyISAM 不支持事务")])]),s._v(" "),t("p",[s._v("事务（数据库事务）定义：一个有限的数据库操作序列构成，是一个不可分割的工作单位")]),s._v(" "),t("blockquote",[t("p",[s._v("MySQL 默认对每一个新建立的连接都启用了 autocommit 模式，在该模式下，每一个发送到 MySQL 服务器的 SQL 语句都会在一个单独的事务中进行处理，执行结束后会自动提交事务，并开启一个新的事务")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("START")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRANSACTION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \t\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启事务")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CHAIN、RELEASE：定义事务提交或回滚之后的操作")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CHAIN 会立即启动一个具有相同隔离级别的新事务")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RELEASE 会断开与客户端的连接")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHAIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RELEASE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 提交事务")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROLLBACK")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORK")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHAIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RELEASE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回滚事务")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" AUTOCOMMIT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" {"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("}\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是否自动提交事务，MySQL 默认自动提交事务")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("隐式锁定：InnoDB 事务执行过程中，使用两阶段锁协议：")]),s._v(" "),t("ul",[t("li",[s._v("随时都可以执行锁定，InnoDB 会根据隔离级别在需要的时候自动加锁")]),s._v(" "),t("li",[s._v("锁只有在提交或回滚时才会释放，并且所有的锁都是在同一时刻被释放")])]),s._v(" "),t("p",[s._v("显式锁定：InnoDB 也支持通过特定的语句进行显示锁定")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lock")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("share")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mode")]),s._v(" \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 共享锁 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" \t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 排他锁 ")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/ACID.png",alt:"事务-ACID"}}),s._v(" "),t("img",{attrs:{src:"/images/kr/database/mysql/%E4%BA%8B%E5%8A%A1%E5%88%86%E7%B1%BB.png",alt:"事务分类"}})]),s._v(" "),t("h3",{attrs:{id:"事务原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务原理"}},[s._v("#")]),s._v(" 事务原理")]),s._v(" "),t("ol",[t("li",[s._v("InnoDB 使用 "),t("code",[s._v("redo log")]),s._v("（重做日志）保证事务的持久性，使用 "),t("code",[s._v("undo log")]),s._v("（回滚日志）来保证事务的原子性")]),s._v(" "),t("li",[s._v("InnoDB 通过"),t("code",[s._v("锁机制")]),s._v("、"),t("code",[s._v("MVCC")]),s._v("等手段来保证事务的隔离")]),s._v(" "),t("li",[s._v("保证了事务的持久性、原子性、隔离性之后，一致性才能得到保障")])]),s._v(" "),t("blockquote",[t("p",[s._v("在数据库系统中，事务的原子性和持久性是由事务日志保证，包含重做日志和回滚日志，回滚日志用于对事务的影响进行撤销，重做日志是在错误处理时对已经提交的事务进行重做，事务日志能保证两点：")]),s._v(" "),t("ul",[t("li",[s._v("发生错误或者需要回滚的事务能够成功回滚（原子性）")]),s._v(" "),t("li",[s._v("在事务提交后，数据没来得及写会磁盘就宕机时，在下次重新启动后能够成功恢复数据（持久性）")])])]),s._v(" "),t("h3",{attrs:{id:"隔离性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#隔离性"}},[s._v("#")]),s._v(" 隔离性")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/%E5%B9%B6%E5%8F%91%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98.png",alt:"并发事务问题"}}),s._v("\n针对并发事务存在的数据库读一致性（脏读，不可重复读，幻读）问题，需要进行事务间的隔离，SQL 标准定义了四个隔离级别（由低到高）：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.png",alt:"事务隔离级别"}})]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SELECT @@transaction_isolation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql8 查看默认隔离级别，mysql5：SELECT @@tx_isolation")]),s._v("\n+-------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" @@transaction_isolation "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------------------------+\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" REPEATABLE-READ         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------------------------+\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("blockquote",[t("p",[s._v("事务隔离级别和数据访问的并发性是对立的，事务隔离级别越高并发性就越差")]),s._v(" "),t("p",[s._v("InnoDB 默认可重复读并不能保证避免幻读，因此通过使用行锁算法"),t("code",[s._v("Next-Key Locks")]),s._v("来保证")]),s._v(" "),t("p",[s._v("Serializable 会在读取的每一行数据上都加锁，可能导致大量的超时和锁竞争问题，这种事务隔离级别效率低下，比较耗数据库性能，一般不使用")]),s._v(" "),t("p",[s._v("InnoDB 支持 XA 事务，并通过 XA 事务来实现分布式事务。分布式事务指允许多个独立的事务资源参与到一个全局事务中。在使用分布式事务时，InnoDB 事务隔离级别必须设置为 SERIALIZABLE 串行化")])]),s._v(" "),t("h3",{attrs:{id:"锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[s._v("#")]),s._v(" 锁")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/%E4%BA%8B%E5%8A%A1-%E9%94%81.png",alt:"事务-锁"}})]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("读锁（共享锁）：针对同一份数据，多个读操作可以同时进行，不会互相影响")]),s._v(" "),t("li",[s._v("写锁（排他锁）：当前写操作没有完成前，会阻断其他写锁和读锁")])]),s._v(" "),t("p",[s._v("锁粒度：在高并发响应和系统性能两方面进行平衡")]),s._v(" "),t("ul",[t("li",[s._v("全局锁：对整个数据库实例加锁，可以用"),t("code",[s._v("Flush tables with read lock (FTWRL)")]),s._v("设置为只读，相当于加全局锁")]),s._v(" "),t("li",[s._v("表级锁：锁定粒度最大的一种锁，对当前表加锁；锁冲突概率高，并发度低，加锁快，不会死锁")]),s._v(" "),t("li",[s._v("行级锁：锁定粒度最小的一种锁，对当前行加锁；锁冲突概率低，并发度高，加速慢，存在死锁")])]),s._v(" "),t("p",[s._v("加锁机制："),t("code",[s._v("乐观锁")]),s._v("与"),t("code",[s._v("悲观锁")]),s._v("是两种并发控制的思想，可用于解决"),t("code",[s._v("丢失更新")]),s._v("问题")]),s._v(" "),t("ul",[t("li",[s._v("乐观锁：假定不会发生并发更新冲突，访问处理数据过程中从不加锁，再根据版本号或时间戳判断是否有冲突，有则处理，无则提交事务")]),s._v(" "),t("li",[s._v("悲观锁：假定总会发生并发更新冲突，访问处理数据过程中加排他锁，事务提交或回滚后才释放锁")])])]),s._v(" "),t("p",[s._v("MyISAM 表锁（表共享读锁、表独占写锁），读写锁调度是写优先：")]),s._v(" "),t("ul",[t("li",[s._v("在执行查询语句前，会自动给涉及的表加读锁，在执行增删改操作前，会自动给涉及的表加写锁")]),s._v(" "),t("li",[s._v("表共享读锁会阻塞写，但是不会堵塞读，而表独占写锁则会把读和写都堵塞")]),s._v(" "),t("li",[s._v("也就是，MyISAM 表的读与写之间，及写之间都是串行执行的")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("open")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tables")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看表的加锁情况")]),s._v("\nmysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看表级锁竞争情况")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----------------------------+-------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Variable_name              "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Value")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----------------------------+-------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Table_locks_immediate      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Table_locks_waited         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Table_open_cache_hits      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Table_open_cache_misses    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Table_open_cache_overflows "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("----------------------------+-------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Table_locks_immediate：产生表级锁定的次数，表示可以立即获取锁的查询次数，每立即获取锁值加1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Table_locks_waited：出现表级锁定竞争而发生等待的次数(不能立即获取锁的次数，每等待一次锁值加1)，此值高则说明存在着较严重的表级锁竞争情况")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("InnoDB 锁定模式：")]),s._v(" "),t("ul",[t("li",[s._v("共享锁（S），排他锁（X），意向共享锁（IS）和意向排他锁（IX）；")]),s._v(" "),t("li",[s._v("如果一个事务请求的锁模式与当前的锁兼容，InnoDB 就将请求的锁授予该事务，反之，若两者不兼容，该事务就要等待锁释放")]),s._v(" "),t("li",[s._v("意向锁（表级锁定）：当一个事务在需要获取锁时，若已被排他锁占用，则该事务可以再需要锁定行的表上添加一个合适的意向锁（共享锁/排他锁）")]),s._v(" "),t("li",[s._v("对于 UPDATE、DELETE、INSERT，InnoDB 会自动给涉及数据集加排他锁（X)；对于普通 SELECT 语句，InnoDB 不会加任何锁")])]),s._v(" "),t("blockquote",[t("p",[s._v("InnoDB 行锁：通过给索引上的索引项加锁来实现，只有通过索引条件检索数据，InnoDB 才使用行级锁，否则，InnoDB 将使用表锁")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("mysql"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'innodb_row_lock%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看行级锁竞争情况")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-------------------------------+-------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Variable_name                 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Value")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-------------------------------+-------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Innodb_row_lock_current_waits "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Innodb_row_lock_time          "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Innodb_row_lock_time_avg      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Innodb_row_lock_time_max      "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Innodb_row_lock_waits         "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-------------------------------+-------+")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Innodb_row_lock_current_waits：当前正在等待锁定的数量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Innodb_row_lock_time：从系统启动到现在锁定总时间长度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Innodb_row_lock_time_avg：每次等待所花平均时间")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Innodb_row_lock_time_max：从系统启动到现在等待最常的一次所花的时间")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Innodb_row_lock_waits：系统启动后到现在总共等待的次数")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("blockquote",[t("p",[s._v("行锁优化：")]),s._v(" "),t("ul",[t("li",[s._v("尽可能让所有数据检索都通过索引来完成，避免无索引行锁升级为表锁")]),s._v(" "),t("li",[s._v("合理设计索引，尽量缩小锁的范围")]),s._v(" "),t("li",[s._v("尽可能较少检索条件，避免间隙锁")]),s._v(" "),t("li",[s._v("尽量控制事务大小，减少锁定资源量和时间长度")]),s._v(" "),t("li",[s._v("尽可能低级别事务隔离")])])]),s._v(" "),t("p",[s._v("读未提交：")]),s._v(" "),t("ul",[t("li",[s._v("事务读不加锁，不阻塞其他事务的读和写")]),s._v(" "),t("li",[s._v("事务写阻塞其他事务写，但不阻塞其他事务读")])]),s._v(" "),t("p",[s._v("可串行化：")]),s._v(" "),t("ul",[t("li",[s._v("所有 SELECT 语句会隐式转化为 SELECT...FOR SHARE，即加共享锁")]),s._v(" "),t("li",[s._v("读加共享锁，写加排他锁，读写互斥")]),s._v(" "),t("li",[s._v("如果有未提交的事务正在修改某些行，所有 select 这些行的语句都会阻塞")])]),s._v(" "),t("h3",{attrs:{id:"mvcc-多版本并发控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mvcc-多版本并发控制"}},[s._v("#")]),s._v(" MVCC 多版本并发控制")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6-MVCC.png",alt:"多版本并发控制-MVCC"}})]),s._v(" "),t("p",[s._v("MVCC 是通过保存数据在某个时间点的快照（一致性非锁定读）来实现，分为"),t("code",[s._v("乐观并发控制")]),s._v("和"),t("code",[s._v("悲观并发控制")]),s._v("两种实现方式")]),s._v(" "),t("p",[s._v("RR 和 RC 隔离级别下，MVCC 的实现差异：生成快照的时机不同：")]),s._v(" "),t("ul",[t("li",[s._v("RC：事务的每次 select 前都生成一个快照")]),s._v(" "),t("li",[s._v("RR：在事务开启后，第一次 select 前生成一次快照")])]),s._v(" "),t("blockquote",[t("p",[s._v("在 RC 下，事务在每次查询开始时都会生成并设置新的快照，所以导致不可重复读")]),s._v(" "),t("p",[s._v("在 RR 下，只会在事务开始后第一次读取数据时生成一个快照，所以实现可重复读")])]),s._v(" "),t("h3",{attrs:{id:"解决幻读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决幻读"}},[s._v("#")]),s._v(" 解决幻读")]),s._v(" "),t("p",[s._v("在 RR 下通过 MVCC + Next-key Lock 来解决幻读问题：")]),s._v(" "),t("ul",[t("li",[s._v("执行普通 select，此时会以 MVCC 快照读的方式读取数据\n"),t("ul",[t("li",[s._v("在快照读情况下，RR 隔离级别只会在事务开启后的第一次查询生成快照，并使用至事务提交。")]),s._v(" "),t("li",[s._v("所以在生成快照后其它事务所做的更新、插入对当前事务不可见，实现了可重复读和防止快照读下的“幻读”")])])]),s._v(" "),t("li",[s._v("执行 select...for update/lock in share mode、insert、update、delete 等锁定读（当前读）\n"),t("ul",[t("li",[s._v("在当前读下，读取的都是最新数据，若其它事务插入新的记录，且刚好在当前事务查询范围内，就会产生幻读")]),s._v(" "),t("li",[s._v("当执行当前读时，Next-key Lock 会锁定读取到的记录，同时锁定记录的间隙，防止其它事务在查询范围内插入数据，实现当前读下的“幻读”")])])])]),s._v(" "),t("h2",{attrs:{id:"日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[s._v("#")]),s._v(" 日志")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97.png",alt:"事务日志"}})]),s._v(" "),t("h3",{attrs:{id:"redo-log-重做日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redo-log-重做日志"}},[s._v("#")]),s._v(" redo log 重做日志")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/%E9%87%8D%E5%81%9A%E6%97%A5%E5%BF%97.png",alt:"重做日志"}})]),s._v(" "),t("p",[s._v("在 InnoDB 中，事务日志通过重做日志（redo log）和 InnoDB 的日志缓冲（InnoDB Log Buffer）实现。")]),s._v(" "),t("blockquote",[t("p",[s._v("预写日志：Write-Ahead Logging，WAL，事务开启时，事务中的操作都会先写入存储引擎的日志缓冲中，在事务提交之前，日志缓冲的日志都需要提前刷新（顺序追加）到重做日志文件上持久化")])]),s._v(" "),t("p",[s._v("当事务提交之后，在 Buffer Pool 中映射的数据文件才会慢慢刷新到磁盘；")]),s._v(" "),t("ul",[t("li",[s._v("innodb_flush_log_at_trx_commit = 0：若 MySQL 挂了或系统宕机可能会丢失 1 秒数据")]),s._v(" "),t("li",[s._v("innodb_flush_log_at_trx_commit = 1：事务提交成功，就不坏丢失数据；事务执行期间若 MySQL 挂了或系统宕机，由于事务没有提交，日志丢失也不会有损失")]),s._v(" "),t("li",[s._v("innodb_flush_log_at_trx_commit = 2：若只是 MySQL 挂了不会丢失数据，但是系统宕机可能会丢失 1 秒数据")])]),s._v(" "),t("h3",{attrs:{id:"undo-log-回滚日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#undo-log-回滚日志"}},[s._v("#")]),s._v(" undo log 回滚日志")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/%E5%9B%9E%E6%BB%9A%E6%97%A5%E5%BF%97.png",alt:"回滚日志"}})]),s._v(" "),t("blockquote",[t("p",[s._v("redo log 是恢复提交事务修改的页操作，而 undo log 是回滚行记录到特定版本")]),s._v(" "),t("p",[s._v("redo log 是物理日志，记录页的物理修改操作，而 undo log 是逻辑日志，根据每行记录进行记录")])]),s._v(" "),t("h3",{attrs:{id:"binlog-二进制日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binlog-二进制日志"}},[s._v("#")]),s._v(" binlog 二进制日志")]),s._v(" "),t("blockquote",[t("p",[s._v("redo log、undo log 属于事务日志范畴，属于 InnoDB 存储引擎，而 binlog 是逻辑日志，属于 MySQL Server")]),s._v(" "),t("p",[s._v("binlog 会记录所有涉及更新数据的逻辑操作，并且是顺序")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/binlog.png",alt:"binlog"}})]),s._v(" "),t("p",[s._v("binlog 三种日志格式（binlog_format）：")]),s._v(" "),t("ul",[t("li",[s._v("statement：记录的是 SQL 语句原文，可能导致数据不一致")]),s._v(" "),t("li",[s._v("row：记录 SQL 语句，也包括操作的具体数据，需要更大的容量来记录，占用空间较大，恢复与同步时会更消耗 IO 资源，影响执行速度")]),s._v(" "),t("li",[s._v("mixed：先判断 SQL 语句是否可能引起数据不一致，如果是，就用 row 格式，否则就用 statement 格式")])]),s._v(" "),t("blockquote",[t("p",[s._v("redo log 与 binlog 都能够保证数据的持久化，但 redo log 侧重故障时的数据恢复，而 binlog 侧重集群架构的数据一致性")]),s._v(" "),t("p",[s._v("当 redo log 与 binlog 之间的逻辑不一致时，可能回会出现数据不一致，InnoDB 采用两阶段（"),t("code",[s._v("prepare")]),s._v("和"),t("code",[s._v("commit")]),s._v("）提交方案，将 redo log 的写入过程分为两步")])]),s._v(" "),t("h2",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),t("p",[s._v("在关系数据库中，索引（键）是一种单独的、物理的对数据库表中一列或多列的值进行排序的存储结构，它是某个表中一列或若干列值的集合和相应的指向表中物理标识这些值的数据页的逻辑指针清单")]),s._v(" "),t("blockquote",[t("p",[s._v("索引是一种对数据进行高效查找并以某种方式指向数据的独立、物理存储结构")]),s._v(" "),t("p",[s._v("索引是一种用于快速查询和检索数据的满足特定查找算法的数据结构，并以某种方式指向数据，在该数据结构上可以实现高效查找算法")]),s._v(" "),t("p",[s._v("常见有：哈希表、有序数组，各种搜索树等")]),s._v(" "),t("blockquote",[t("p",[s._v("注意：索引是在存储引擎层实现的，不同的存储引擎对索引的支持和实现有所差别")])])]),s._v(" "),t("p",[s._v("磁盘 IO 与预读：磁盘读取数据靠的是机械运动，每次读取数据花费的时间可以分为寻道时间、旋转延迟、传输时间三个部分。计算机操作系统对磁盘 IO 做了一些优化，根据"),t("code",[s._v("局部预读性原理")]),s._v("，当计算机访问一个地址的数据时，与其相邻的数据也会很快被访问到，于是一次磁盘 IO 把当前磁盘地址的数据和相邻的数据都读取到内存缓冲区中，每一次磁盘 IO 读取的数据称为一页。")]),s._v(" "),t("blockquote",[t("p",[s._v("索引结构的选择要尽量减少磁盘 IO 次数")])]),s._v(" "),t("p",[s._v("参考："),t("a",{attrs:{href:"https://tech.meituan.com/2014/06/30/mysql-index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("MySQL索引原理及慢查询优化"),t("OutboundLink")],1)]),s._v(" "),t("blockquote",[t("p",[s._v("InnoDB 和 MyISAM 都使用 B+ 树作为索引结构，但实现方式有所区别")])]),s._v(" "),t("h3",{attrs:{id:"优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[s._v("#")]),s._v(" 优缺点")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/%E7%B4%A2%E5%BC%95%E4%BC%98%E7%BC%BA%E7%82%B9.png",alt:"索引优缺点"}})]),s._v(" "),t("h3",{attrs:{id:"分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[s._v("#")]),s._v(" 分类")]),s._v(" "),t("p",[s._v("逻辑划分：")]),s._v(" "),t("ul",[t("li",[s._v("主键索引：唯一非空索引，不允许空值")]),s._v(" "),t("li",[s._v("普通索引/单例索引/辅助索引：只包含单个数据列")]),s._v(" "),t("li",[s._v("多列索引/复合索引/联合索引：基于多个数据列的索引，只有使用该索引的第一个数据列，索引才生效")]),s._v(" "),t("li",[s._v("唯一索引/非唯一索引：允许空值")]),s._v(" "),t("li",[s._v("Full-Text 全文索引：查找的是文本中的关键词，而不是直接比较索引中的值")]),s._v(" "),t("li",[s._v("空间索引：对空间数据类型的字段建立的索引")])]),s._v(" "),t("p",[s._v("索引结构划分：Hash 索引、B+ 树索引")]),s._v(" "),t("p",[s._v("物理存储划分：聚集索引、非聚集索引（区别：索引和数据是否一起存储）")]),s._v(" "),t("h3",{attrs:{id:"索引结构-hash-索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引结构-hash-索引"}},[s._v("#")]),s._v(" 索引结构-Hash 索引")]),s._v(" "),t("p",[s._v("Hash 索引采用哈希表设计，通过哈希算法/散列算法计算 key 的哈希值并与表长取余得到索引位置，可快速查找到对应的 value，且可采用"),t("code",[s._v("链地址法")]),s._v("解决哈希冲突")]),s._v(" "),t("blockquote",[t("p",[s._v("为了减少哈希冲突的发生，一个优秀的哈希算法应该“均匀地”将数据分布在整个可能的哈希值集合中")])]),s._v(" "),t("p",[s._v("MySQL 没有使用 Hash 索引（Hash 索引不适用）：")]),s._v(" "),t("ul",[t("li",[s._v("Hash 索引存在哈希冲突")]),s._v(" "),t("li",[s._v("Hash 索引不支持顺序和范围查找（无法对范围内的全部数据进行哈希定位计算）")])]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据结构可视化网站"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"索引结构-b-树索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引结构-b-树索引"}},[s._v("#")]),s._v(" 索引结构-B+ 树索引")]),s._v(" "),t("blockquote",[t("p",[s._v("B-Tree 和 B+Tree 都是为磁盘等外存储设备设计的一种平衡查找树，磁盘 IO 次数取决于树的高度")])]),s._v(" "),t("blockquote",[t("p",[s._v("B 树：")]),s._v(" "),t("ul",[t("li",[s._v("定义数据记录为 [key, data]，key 为记录键值，data 为除键值外的记录数据")]),s._v(" "),t("li",[s._v("每个节点都存储键值数据，叶子节点之间无指针连接")]),s._v(" "),t("li",[s._v("每个节点中的 key 从左到右非递减排列，key 和指针互相间隔，节点两端是指针")]),s._v(" "),t("li",[s._v("相比二叉搜索树，对于相同数据量，B 树的高度比二叉树小，磁盘 IO 次数小，因此搜索速度快")])])]),s._v(" "),t("blockquote",[t("p",[s._v("B+ 树：")]),s._v(" "),t("ul",[t("li",[s._v("由 B 树和索引顺序访问方法(ISAM)演化而来，为磁盘或其它直接存取辅助设备设计的一种平衡查找树")]),s._v(" "),t("li",[s._v("所有数据记录节点都是按键值的大小顺序存放在同一层的叶子节点上，由各叶子节点指针进行连接")]),s._v(" "),t("li",[s._v("非叶子节点上只存储 key 值信息，大大加大每个节点存储的 key 值数量，降低 B+Tree 的高度")]),s._v(" "),t("li",[s._v("性能分析：将一个节点的大小设为一个页，这样每个节点只需要一次I/O就可以完全载入，根据 B+ 树定义，可知检索一次最多需要访问 h(高度) 个节点")]),s._v(" "),t("li",[s._v("范围查询：B+Tree 可以对 <，<=，=，>，>=，BETWEEN，IN，以及不以通配符开始的 LIKE 使用索引，该做法同时也违反了最左前缀原则，导致范围查询后的条件无法用到联合索引")])]),s._v(" "),t("p",[s._v("B+ 树与 B 树的不同点：")]),s._v(" "),t("ul",[t("li",[s._v("B+ 树非叶子节点不存储 data，只存储 key，叶子节点存储 key、data，不存储指针")]),s._v(" "),t("li",[s._v("顺序访问指针：叶子节点指向相邻叶子节点的指针；顺着叶子节点和指针顺序遍历就可提高区间查询效率")])])]),s._v(" "),t("blockquote",[t("p",[s._v("为什么使用 B+ 树，而不是 B 树？")]),s._v(" "),t("ul",[t("li",[s._v("磁盘 IO：B 树每个节点都存储键值数据，而 B+ 树只有叶子节点才存储数据，在相同数据量情况下，B 树的高度更高，IO 更频繁")]),s._v(" "),t("li",[s._v("索引加载：索引是存储在磁盘文件中，数据量大时，只能逐一加载磁盘页（索引树节点），而 B+ 树的叶子节点中是双向链表，且在链表的头结点和尾节点也是循环指向的")])])]),s._v(" "),t("p",[s._v("树高度决定磁盘 IO 次数：")]),s._v(" "),t("ul",[t("li",[s._v("若表数据量为 N，每个磁盘块（可设置为页的大小，即一页）的数据项的数量是 m，则有 "),t("code",[s._v("h=㏒(m+1)N")])]),s._v(" "),t("li",[s._v("当 N 一定时，m 越大，h 越小；而 m = 磁盘块的大小 / 数据项的大小")]),s._v(" "),t("li",[s._v("如果数据项占的空间越小，数据项的数量越多，树的高度越低")]),s._v(" "),t("li",[s._v("所以在设计索引时，每个数据项即索引字段要尽量的小")]),s._v(" "),t("li",[s._v("这也是为什么 B+ 树把数据放到叶子节点而不是非叶子节点，一旦放到非叶子节点，磁盘块的数据项会大幅度下降，导致树增高，当数据项等于 1 时将会退化成线性表")])]),s._v(" "),t("h3",{attrs:{id:"myisam-非聚集索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#myisam-非聚集索引"}},[s._v("#")]),s._v(" MyISAM 非聚集索引")]),s._v(" "),t("p",[s._v("MyISAM 的索引文件和数据文件是分离（称为非聚集索引），MyISAM 索引结构的叶子节点的数据域，存放的并不是实际的数据记录，而是数据记录的地址。")]),s._v(" "),t("p",[s._v("MyISAM 不管是主键索引还是普通索引，都是非聚集索引，通过索引查找数据的流程：先从索引文件中查找到索引节点，拿到数据的地址指针，再到数据文件中通过地址指针定位到具体的数据。")]),s._v(" "),t("h3",{attrs:{id:"innodb-聚集索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#innodb-聚集索引"}},[s._v("#")]),s._v(" InnoDB 聚集索引")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/kr/database/mysql/B+Tree-%E7%B4%A2%E5%BC%95.png",alt:"B+Tree-索引"}})]),s._v(" "),t("p",[s._v("InnoDB 索引叶子节点的数据域，存放的是完整的数据记录，也即 InnoDB 的数据文件本身就是按照主键建立的主键索引文件，称为聚集索引，一个表只能有一个聚集索引（主键索引）。")]),s._v(" "),t("p",[s._v("InnoDB 聚集索引的索引和数据都存储在一个 "),t("code",[s._v(".idb")]),s._v("文件中，非叶子节点存储索引段，叶子节点存储索引和索引对应的顺序排序的数据段。")]),s._v(" "),t("p",[s._v("回表查询：对于辅助索引，需要检索辅助索引的叶子节点获取对应的主键，再到主键索引检索数据。")]),s._v(" "),t("blockquote",[t("p",[s._v("InnoDB 表必须要有主键，并且推荐使用整型自增主键，在设计表时，没有显示指定主键，InnoDB 会自动检查表中是否有唯一非空数据列，若有，则选择该列为默认的主键，否则 InnoDB 将会自动创建一个 6Byte 的自增整型主键。")])]),s._v(" "),t("h3",{attrs:{id:"覆盖索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引"}},[s._v("#")]),s._v(" 覆盖索引")]),s._v(" "),t("p",[s._v("覆盖索引：一个索引包含/覆盖所有需要查询的字段的值（非聚集索引不一定需要回表查询）")]),s._v(" "),t("p",[s._v("覆盖索引即需要查询的字段正好是索引的字段，那么直接根据该索引，就可以查到数据了， 而无需回表查询。")]),s._v(" "),t("h2",{attrs:{id:"索引优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引优化"}},[s._v("#")]),s._v(" 索引优化")]),s._v(" "),t("h3",{attrs:{id:"索引设计原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引设计原则"}},[s._v("#")]),s._v(" 索引设计原则")]),s._v(" "),t("ul",[t("li",[s._v("选择合适的字段创建索引")]),s._v(" "),t("li",[s._v("频繁更新的字段应该慎重建立索引，维护索引的成本较高")]),s._v(" "),t("li",[s._v("尽可能的考虑建立联合索引而不是单列索引")]),s._v(" "),t("li",[s._v("注意避免冗余索引和重复索引")]),s._v(" "),t("li",[s._v("考虑在字符串类型的字段上使用前缀索引代替普通索引")]),s._v(" "),t("li",[s._v("尽量选择区分度高的列作为索引")])]),s._v(" "),t("h3",{attrs:{id:"索引使用原则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引使用原则"}},[s._v("#")]),s._v(" 索引使用原则")]),s._v(" "),t("ul",[t("li",[s._v("全值匹配")]),s._v(" "),t("li",[s._v("最左前缀原则")]),s._v(" "),t("li",[s._v("索引不参与计算，会导致索引失效而转向全表扫描")]),s._v(" "),t("li",[s._v("存储引擎不能使用索引中范围条件右边的列")]),s._v(" "),t("li",[s._v("尽量使用覆盖索引")]),s._v(" "),t("li",[s._v("like 以通配符开头('%')，造成索引失效会变成全表扫描的操作")]),s._v(" "),t("li",[s._v("字符串不加单引号索引失效")]),s._v(" "),t("li",[s._v("<，<=，=，>，>=，BETWEEN，IN 可用到索引，<>，not in ，!= 则不行，会导致全表扫描")]),s._v(" "),t("li",[s._v("少用or，用它来连接时会索引失效")]),s._v(" "),t("li",[s._v("is null ,is not null 也无法使用索引")])])])}),[],!1,null,null,null);a.default=e.exports}}]);