(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{517:function(e,v,_){"use strict";_.r(v);var o=_(34),l=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"基于-zookeeper-的分布式锁"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基于-zookeeper-的分布式锁"}},[e._v("#")]),e._v(" 基于 Zookeeper 的分布式锁")]),e._v(" "),_("blockquote",[_("p",[e._v("分布式锁：在分布式系统中访问共享资源的一种互斥机制，处理各种跨 JVM 进程之间的数据同步问题，以保证一致性；")]),e._v(" "),_("p",[e._v("分布式锁常用简介方案：基于数据库实现分布式锁；基于缓存实现分布式锁；基于 Zookeeper 实现分布式锁")])]),e._v(" "),_("p",[e._v("分布式锁应该具备的条件：")]),e._v(" "),_("ul",[_("li",[e._v("获取锁和释放锁的性能要好")]),e._v(" "),_("li",[e._v("判断是否获得锁必须是原子性的，否则可能导致多个请求都获取到锁")]),e._v(" "),_("li",[e._v("网络中断或宕机无法释放锁时，锁必须被清楚，不然会发生死锁")]),e._v(" "),_("li",[e._v("可重入锁")]),e._v(" "),_("li",[e._v("阻塞锁和非阻塞锁")])]),e._v(" "),_("p",[e._v("基于 Zookeeper 临时顺序节点可以实现"),_("code",[e._v("公平可重入的分布式独占锁")]),e._v("：")]),e._v(" "),_("ol",[_("li",[e._v("客户端进程获取锁时，在该锁对应的节点下，创建一个唯一的临时顺序子节点")]),e._v(" "),_("li",[e._v("再判断是否为所有顺序节点中序号最小的一个，若是，则获取锁，否则监听前一个节点")]),e._v(" "),_("li",[e._v("当前一个节点被删除释放锁时，触发删除事件，后一个节点再获取锁之前继续进行序号判断")])]),e._v(" "),_("p",[_("img",{attrs:{src:"/images/kr/zookeeper/Zookeeper-%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.png",alt:"Zookeeper-分布式锁"}}),e._v("\nZookeeper 分布式锁的优点：")]),e._v(" "),_("ul",[_("li",[e._v("临时顺序节点的递增有序性，可以实现锁的公平")]),e._v(" "),_("li",[e._v("节点监听机制，可以保障独占锁的高效有序传递，且能避免羊群效应（一个节点挂掉，所有节点都去监听，然后做出反应，这样会给服务器带来巨大压力）")]),e._v(" "),_("li",[e._v("可以避免客户端宕机导致的锁无法释放，而产生的死锁问题")]),e._v(" "),_("li",[e._v("客户端在创建节点时，把客户端主机信息和线程信息直接写入节点中，当节点数据一致时可实现重复获取锁")]),e._v(" "),_("li",[e._v("可以有效的解决单点问题，ZK 是集群部署的，只要集群中有半数以上的机器存活，就可以对外提供服务")])]),e._v(" "),_("p",[e._v("Zookeeper 分布式锁的缺点：")]),e._v(" "),_("ul",[_("li",[e._v("性能问题：因为分布式锁实现过程中，需要动态创建/删除临时节点，创建和删除节点作为一个事务请求只能由 Leader 服务器进行处理，Leader 还需要和 Follower 服务器进行多次网络通信实现事务请求的 ACK 投票和最终提交。")]),e._v(" "),_("li",[e._v("并发问题：客户端连接断开后，ZK 经过多次心跳检测失败后删除临时节点释放锁，其它客户端就可以获取分布式锁，当客户端在会话有效期内重新连接上 ZK，发现锁被强制释放，就有可能会发生并发问题。")])]),e._v(" "),_("blockquote",[_("p",[e._v("在高性能，高并发场景下，不建议使用 ZooKeeper 分布式锁；适用于高可靠（高可用）而并发量不是太大的场景")])])])}),[],!1,null,null,null);v.default=l.exports}}]);